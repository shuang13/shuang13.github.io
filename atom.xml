<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Dye Cream</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://shuang13.coding.me/"/>
  <updated>2016-08-08T16:34:48.329Z</updated>
  <id>http://shuang13.coding.me/</id>
  
  <author>
    <name>zbb</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Bootstrap 学习笔记(1)</title>
    <link href="http://shuang13.coding.me/2016/08/08/Bootstrap%E7%AC%94%E8%AE%B0-1/"/>
    <id>http://shuang13.coding.me/2016/08/08/Bootstrap笔记-1/</id>
    <published>2016-08-08T15:03:53.000Z</published>
    <updated>2016-08-08T16:34:48.329Z</updated>
    
    <content type="html">&lt;h2 id=&quot;从中学到的CSS&quot;&gt;&lt;a href=&quot;#从中学到的CSS&quot; class=&quot;headerlink&quot; title=&quot;从中学到的CSS&quot;&gt;&lt;/a&gt;从中学到的CSS&lt;/h2&gt;&lt;p&gt;在看Bootstrap的教程的时候，发现很多css的知识都不知道，所以在要学好Bootstrap，还是先把这些基础记下来。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;line-height&quot;&gt;&lt;a href=&quot;#line-height&quot; class=&quot;headerlink&quot; title=&quot;line-height&quot;&gt;&lt;/a&gt;line-height&lt;/h4&gt;&lt;p&gt;line-height 与 font-size 的计算值之差（在 CSS 中成为“行间距”）分为两半，分别加到一个文本行内容的顶部和底部。可以包含这些内容的最小框就是行框。&lt;/p&gt;
&lt;p&gt;一般用到line-height就只有把文本垂直居中，设置行高的像素和包含文本div的高度一样。却一直没用明白行高的含义。&lt;/p&gt;
&lt;p&gt;当line-height的值为数字的时候，此数字会与当前的字体尺寸相乘来设置行间距。这是看到Bootsrap的Body默认样式  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;font-size: 14px;
line-height: 1.428571429;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;才知道。这里行高为20px。&lt;/p&gt;
&lt;h4 id=&quot;outline&quot;&gt;&lt;a href=&quot;#outline&quot; class=&quot;headerlink&quot; title=&quot;outline&quot;&gt;&lt;/a&gt;outline&lt;/h4&gt;&lt;p&gt;outline （轮廓）是绘制于元素周围的一条线，位于&lt;strong&gt;边框边缘的外围&lt;/strong&gt;，可起到突出元素的作用。&lt;/p&gt;
&lt;p&gt;轮廓线&lt;strong&gt;不会占据空间&lt;/strong&gt;，也不一定是矩形。&lt;/p&gt;
&lt;p&gt;而且我这时候才知道&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;outline:#00FF00 dotted thick;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里颜色，虚线，加厚。顺序是可以变化的，比如我一直写的boder的样式。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;boder:1px sliod #00FF00;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样也是可以的。&lt;/p&gt;
&lt;p&gt;此外，一直记不住的就是怎样去掉input输入框点击时出现的蓝色外边框。&lt;/p&gt;
&lt;p&gt;这样就行了：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;outline:none
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;伪类与伪元素&quot;&gt;&lt;a href=&quot;#伪类与伪元素&quot; class=&quot;headerlink&quot; title=&quot;伪类与伪元素&quot;&gt;&lt;/a&gt;伪类与伪元素&lt;/h4&gt;&lt;p&gt;如今才知道伪类与伪元是有区别的，&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;伪类&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;：focus(被鼠标选中)&lt;/li&gt;
&lt;li&gt;：hover&lt;/li&gt;
&lt;li&gt;：link&lt;/li&gt;
&lt;li&gt;：first-child等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;伪元素&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;：before&lt;/li&gt;
&lt;li&gt;：after等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;发现原来伪类是伴随着事件的，而元素就是元素而已。&lt;/p&gt;
&lt;p&gt;实际上 css3 为了区分两者，已经明确规定了伪类用一个冒号来表示，而伪元素则用两个冒号来表示。但要考虑兼容性。&lt;/p&gt;
&lt;p&gt;像这样&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p：hover
p::after
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;属性contenteditable&quot;&gt;&lt;a href=&quot;#属性contenteditable&quot; class=&quot;headerlink&quot; title=&quot;属性contenteditable&quot;&gt;&lt;/a&gt;属性contenteditable&lt;/h4&gt;&lt;p&gt;contenteditable 属性规定是否可编辑元素的内容。属于html5。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE HTML&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;p contenteditable=&amp;quot;true&amp;quot;&amp;gt;这是一段可编辑的段落。请试着编辑该文本。&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;html&gt;&lt;body&gt;&lt;p contenteditable=&quot;true&quot;&gt;这是一段可编辑的段落。请试着编辑该文本。&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;

&lt;h4 id=&quot;文章标题及格式&quot;&gt;&lt;a href=&quot;#文章标题及格式&quot; class=&quot;headerlink&quot; title=&quot;文章标题及格式&quot;&gt;&lt;/a&gt;文章标题及格式&lt;/h4&gt;&lt;p&gt;原来语文没学好，至今还不知道标题的格式。像h1,h2,h3，副标题，段落p这些在写网页的时候怎么用都不知道，都是看图看感觉，我觉得有必要记记。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;副标题&lt;/strong&gt;要在大标题第三个字下开始写破折号。&lt;/p&gt;
&lt;p&gt;H1标签虽然权重高，但是不可以存在多个.&lt;/p&gt;
&lt;h4 id=&quot;text-indent缩进&quot;&gt;&lt;a href=&quot;#text-indent缩进&quot; class=&quot;headerlink&quot; title=&quot;text-indent缩进&quot;&gt;&lt;/a&gt;text-indent缩进&lt;/h4&gt;&lt;p&gt;text-indent只用于div，p这样的元素上，像image、input、inline-block、inline元素绝对不用。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;从中学到的CSS&quot;&gt;&lt;a href=&quot;#从中学到的CSS&quot; class=&quot;headerlink&quot; title=&quot;从中学到的CSS&quot;&gt;&lt;/a&gt;从中学到的CSS&lt;/h2&gt;&lt;p&gt;在看Bootstrap的教程的时候，发现很多css的知识都不知道，所以在要学好Bootstrap，还是先把这些基础记下来。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CSS3新特性</title>
    <link href="http://shuang13.coding.me/2016/08/06/css3%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    <id>http://shuang13.coding.me/2016/08/06/css3新特性/</id>
    <published>2016-08-06T13:02:13.000Z</published>
    <updated>2016-08-08T16:49:28.211Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;CSS3 边框&lt;/li&gt;
&lt;li&gt;CSS3 背景&lt;/li&gt;
&lt;li&gt;CSS3 文本效果&lt;/li&gt;
&lt;li&gt;CSS3 字体&lt;/li&gt;
&lt;li&gt;CSS3 动画&lt;/li&gt;
&lt;li&gt;CSS3 多列&lt;/li&gt;
&lt;li&gt;CSS3 用户界面&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;CSS3-边框&quot;&gt;&lt;a href=&quot;#CSS3-边框&quot; class=&quot;headerlink&quot; title=&quot;CSS3 边框&quot;&gt;&lt;/a&gt;CSS3 边框&lt;/h2&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;border-radius&lt;/li&gt;
&lt;li&gt;box-shadow&lt;/li&gt;
&lt;li&gt;border-image&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;CSS3-圆角边框&quot;&gt;&lt;a href=&quot;#CSS3-圆角边框&quot; class=&quot;headerlink&quot; title=&quot;CSS3 圆角边框&quot;&gt;&lt;/a&gt;CSS3 圆角边框&lt;/h3&gt;&lt;p&gt;border-radius属性&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;CSS3圆角只需设置一个属性：border-radius（含义是”边框半径”）。你为这个属性提供一个值，就能同时设置四个圆角的半径。所有合法的CSS度量值都可以使用：em、ex、pt、px、百分比等等&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;border-radius可以同时设置1到4个值。&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;如果设置一个值，表示4个圆角都使用这个值。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;如果设置两个值，表示左上角和右下角使用第一个值，右上角和左下角使用第二个值。

如果设置三个值，表示左上角使用第一个值，右上角和左下角使用第二个值，右下角使用第三个值。

如果设置四个值，则依次对应左上角、右上角、右下角、左下角（顺时针顺序）。
&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;除了同时设置四个圆角以外，还可以单独对每个角进行设置。对应四个角，CSS3提供四个单独的属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;border-top-left-radius
　　&lt;/li&gt;
&lt;li&gt;&lt;p&gt;border-top-right-radius
　　&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;border-bottom-right-radius
　　&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;border-bottom-left-radius&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;这四个属性都可以同时设置1到2个值。如果设置1个值，表示水平半径与垂直半径相等。如果设置2个值，第一个值表示水平半径，第二个值表示垂直半径。
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;另外，并非所有浏览器，都支持将圆角半径设为一个百分比值。&lt;br&gt;因此，目前最安全的做法，就是将每个圆角边框的风格和宽度，都设为一样的值，并且避免使用百分比值。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   div{
border:2px solid;// background: #8AC007;
border-radius:25px;
-moz-border-radius:25px; /* Old Firefox */
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;  关于椭圆边角：&lt;a href=&quot;http://www.ruanyifeng.com/blog/2010/12/detailed_explanation_of_css3_rounded_corners.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.ruanyifeng.com/blog/2010/12/detailed_explanation_of_css3_rounded_corners.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;CSS3-边框阴影&quot;&gt;&lt;a href=&quot;#CSS3-边框阴影&quot; class=&quot;headerlink&quot; title=&quot;CSS3 边框阴影&quot;&gt;&lt;/a&gt;CSS3 边框阴影&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;div{box-shadow: 10px 10px 5px #888888;}
&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;
&lt;li&gt;CSS3 的 box-shadow 有点类似于 text-shadow，只不过不同的是 text-shadow 是对象的文本设置阴影，而 box-shadow 是给对象实现图层阴影效果。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;box-shadow具体使用方法，语法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;box-shadow:inset x-offset y-offset blur-radius spread-radius color
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;对象选择器 {box-shadow:投影方式 X轴偏移量 Y轴偏移量 阴影模糊半径 阴影扩展半径 阴影颜色}&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;box-shadow属性至多有6个参数设置，他们分别取值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;阴影类型&lt;/strong&gt;：此参数是一个可选值，如果不设值，其默认的投影方式是外阴影；如果取其唯一值“inset”,就是将外阴影变成内阴影，也就是说设置阴影类型为“inset”时，其投影就是内阴影；&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;X-offset&lt;/strong&gt;:是指阴影水平偏移量其值可以是正负值可以取正负值，如果值为正值，则阴影在对象的右边，反之其值为负值时，阴影在对象的左边；&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Y-offset&lt;/strong&gt;:是指阴影的垂直偏移量，其值也可以是正负值，如果为正值，阴影在对象的底部，反之其值为负值时，阴影在对象的顶部；&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;阴影模糊半径&lt;/strong&gt;：此参数是可选，，但其值只能是为正值，如果其值为0时，表示阴影不具有模糊效果，其值越大阴影的边缘就越模糊；&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;阴影扩展半径&lt;/strong&gt;：此参数可选，其值可以是正负值，如果值为正，则整个阴影都延展扩大，反之值为负值是，则缩小&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注释&lt;/strong&gt;：当阴影类型选为inset时，阴影水平偏移量为正值时，阴影是在对象的左边框的里面（左边框的右边）和上边框的里面（上边框的底部），为负值时则相反；此理解和上面理解的正值在对象右边显示，负值在对象左边显示为同一个道理，我只是将它和边框联系起来解释而已。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.einput{
 width:120px;
 height:33px;
 line-height:33px;
 padding-left:10px;
 color:#b4b4b4;
 border: 1px solid #939393;
 border-radius:4px;
 box-shadow:inset 1px 1px 4px #d9d9d9;
}
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;style&gt;.einput{width:120px;height:33px;line-height:33px;padding-left:10px;color:#b4b4b4;border: 1px solid #939393;border-radius:4px;box-shadow:inset 1px 1px 4px #d9d9d9;}&lt;/style&gt;&lt;body&gt;&lt;form&gt;&lt;input class=&quot;einput&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;    

&lt;p&gt;若是想要四个边框都有阴影可以写多个阴影样式，在它们之间加个“，”号即可，例如：&lt;/p&gt;
&lt;p&gt;box-shadow:inset 1px 1px 4px #d9d9d9，inset 1px 1px 4px #d9d9d9;同时为内阴影&lt;/p&gt;
&lt;p&gt;box-shadow:inset 1px 1px 4px #d9d9d9，1px 1px 4px #d9d9d9;内阴影和外阴影&lt;/p&gt;
&lt;h3 id=&quot;CSS3-边框图片&quot;&gt;&lt;a href=&quot;#CSS3-边框图片&quot; class=&quot;headerlink&quot; title=&quot;CSS3 边框图片&quot;&gt;&lt;/a&gt;CSS3 边框图片&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;div
{
border-image:url(border.png) 30 30 round;
}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;border-image主要是用图片来填充边框&lt;/li&gt;
&lt;li&gt;border-image的分解属性分别为&lt;/li&gt;
&lt;li&gt;&lt;p&gt;border-image-source 指定border的背景图的url&lt;/p&gt;
&lt;p&gt;  这个是指定border的背景图的url,&lt;/p&gt;
&lt;p&gt;  例:&lt;br&gt;  border-image-source ：url(../images/border.gif);&lt;/p&gt;
&lt;p&gt;  这里可以设置为none,也就是无背景图&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;border-image-slice   设置图片如何切割的属性，非定位！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;border-image-width  定义border-image的显示区域的&lt;/li&gt;
&lt;li&gt;&lt;p&gt;border-image-repeat&lt;/p&gt;
&lt;p&gt;  repeat有三个值选择&lt;/p&gt;
&lt;p&gt;  [ stretch | repeat | round ]：拉伸 | 重复 | 平铺 (其中stretch是默认值。)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;CSS3-背景&quot;&gt;&lt;a href=&quot;#CSS3-背景&quot; class=&quot;headerlink&quot; title=&quot;CSS3 背景&quot;&gt;&lt;/a&gt;CSS3 背景&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;background-size&lt;/li&gt;
&lt;li&gt;&lt;p&gt;background-origin&lt;/p&gt;
&lt;h3 id=&quot;background-size&quot;&gt;&lt;a href=&quot;#background-size&quot; class=&quot;headerlink&quot; title=&quot;background-size&quot;&gt;&lt;/a&gt;background-size&lt;/h3&gt;&lt;p&gt;调整背景图片的大小：&lt;/p&gt;
&lt;p&gt; div&lt;br&gt; {&lt;br&gt; background:url(bg_flower.gif);&lt;br&gt; background-size:63px 100px;&lt;br&gt; background-repeat:no-repeat;&lt;br&gt; }&lt;br&gt;对背景图片进行拉伸，使其完成填充内容区域：&lt;/p&gt;
&lt;p&gt; div&lt;br&gt; {&lt;br&gt; background:url(bg_flower.gif);&lt;br&gt; background-size:40% 100%;&lt;br&gt; background-repeat:no-repeat;&lt;br&gt; }&lt;/p&gt;
&lt;h3 id=&quot;background-origin&quot;&gt;&lt;a href=&quot;#background-origin&quot; class=&quot;headerlink&quot; title=&quot;background-origin&quot;&gt;&lt;/a&gt;background-origin&lt;/h3&gt;&lt;p&gt;background-origin 属性规定背景图片的定位区域。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://www.runoob.com/images/background-origin.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;背景图片可以放置于 content-box、padding-box 或 border-box 区域。&lt;/p&gt;
&lt;p&gt;在 content-box 中定位背景图片：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;div
{
background:url(bg_flower.gif);
background-repeat:no-repeat;
background-size:100% 100%;
background-origin:content-box;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;为 body 元素设置两幅背景图片：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;body
{ 
background-image:url(bg_flower.gif),url(bg_flower_2.gif);
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;CSS3-文本效果&quot;&gt;&lt;a href=&quot;#CSS3-文本效果&quot; class=&quot;headerlink&quot; title=&quot;CSS3 文本效果&quot;&gt;&lt;/a&gt;CSS3 文本效果&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;text-shadow&lt;/li&gt;
&lt;li&gt;&lt;p&gt;word-wrap&lt;/p&gt;
&lt;h3 id=&quot;text-shadow&quot;&gt;&lt;a href=&quot;#text-shadow&quot; class=&quot;headerlink&quot; title=&quot;text-shadow&quot;&gt;&lt;/a&gt;text-shadow&lt;/h3&gt;&lt;p&gt;规定水平阴影、垂直阴影、模糊距离，以及阴影的颜色：&lt;/p&gt;
&lt;p&gt; .text&lt;br&gt; {&lt;br&gt; text-shadow: 5px 5px 5px #FF0000;&lt;br&gt; }&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;style&gt;.text
{text-shadow: 5px 5px 5px #FF0000;}&lt;/style&gt;&lt;body&gt;&lt;h1 class=&quot;text&quot;&gt;时间破碎&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt; 
### word-wrap CSS3 自动换行 ###
在 CSS3 中，word-wrap 属性允许您允许文本强制文本进行换行 - 即使这意味着会对单词进行，并换行到下一行：

    .word {
    width:200px;
    height:70px;
    border:1px solid #000;
    word-wrap:break-word;
    }

&lt;pre&gt;&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;style&gt; .word {width:200px;
height:70px;border:1px solid #000;word-wrap:break-word;}&lt;/style&gt;&lt;body&gt;&lt;p class=&quot;word&quot;&gt;He has had to eat his words about the company being recession-proof.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;

&lt;h2 id=&quot;CSS3-font-face-规则&quot;&gt;&lt;a href=&quot;#CSS3-font-face-规则&quot; class=&quot;headerlink&quot; title=&quot;CSS3 @font-face 规则&quot;&gt;&lt;/a&gt;CSS3 @font-face 规则&lt;/h2&gt;&lt;p&gt;@font-face的作用就是我们可以使用自己设计喜欢的任意字体。&lt;/p&gt;
&lt;p&gt;在新的 @font-face 规则中，您必须首先定义字体的名称（比如 myFirstFont），然后指向该字体文件。&lt;/p&gt;
&lt;p&gt;提示：URL请使用小写字母的字体，大写字母在IE中会产生意外的结果&lt;br&gt;如需为 HTML 元素使用字体，请通过 font-family 属性来引用字体的名称 (myFirstFont)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;style&amp;gt; 
@font-face{
font-family: myFirstFont;
src: url(&amp;apos;Sansation_Light.ttf&amp;apos;),
 url(&amp;apos;Sansation_Light.eot&amp;apos;); /* IE9+ */
}
.font{
     font-family:myFirstFont;
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;CSS3 边框&lt;/li&gt;
&lt;li&gt;CSS3 背景&lt;/li&gt;
&lt;li&gt;CSS3 文本效果&lt;/li&gt;
&lt;li&gt;CSS3 字体&lt;/li&gt;
&lt;li&gt;CSS3 动画&lt;/li&gt;
&lt;li&gt;CSS3 多列&lt;/li&gt;
&lt;li&gt;CSS3 用户界面
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HTML5新特性</title>
    <link href="http://shuang13.coding.me/2016/08/05/html5%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    <id>http://shuang13.coding.me/2016/08/05/html5新特性/</id>
    <published>2016-08-05T14:50:47.000Z</published>
    <updated>2016-08-08T16:31:25.991Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;新的特殊内容元素&lt;/li&gt;
&lt;li&gt;新的表单控件&lt;/li&gt;
&lt;li&gt;音频、视频API&lt;/li&gt;
&lt;li&gt;画布(Canvas) API&lt;/li&gt;
&lt;li&gt;地理(Geolocation) API&lt;/li&gt;
&lt;li&gt;拖拽释放(Drag and drop) API&lt;/li&gt;
&lt;li&gt;网页存储(Web storage) API&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;新的特殊内容元素&quot;&gt;&lt;a href=&quot;#新的特殊内容元素&quot; class=&quot;headerlink&quot; title=&quot;新的特殊内容元素&quot;&gt;&lt;/a&gt;新的特殊内容元素&lt;/h2&gt;&lt;p&gt;在HTML4中的内容标签级别相同，只能用class类名来区分各个模块的语义。而HTML5中的比如 article、footer、header、nav、section等内容标签级别不同，可便于搜索引擎快速识别。&lt;br&gt;&lt;img src=&quot;http://img.yixieshi.com/uploads/allimg/111128/011AT245-1.jpg?sign=MBO%3AxSCczKp2MjuZ%3AuHDSfo6cZn9Z6c6vbaJX1h%2Fdb8E%3D&amp;amp;imageView2/2/w/558/h/246&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这张图就让我很快明白了这个意思。&lt;/p&gt;
&lt;h2 id=&quot;新的表单控件&quot;&gt;&lt;a href=&quot;#新的表单控件&quot; class=&quot;headerlink&quot; title=&quot;新的表单控件&quot;&gt;&lt;/a&gt;新的表单控件&lt;/h2&gt;&lt;p&gt;HTML5 拥有多个新的表单输入类型。主要是控制input表单的type类型里的值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Input 类型-email&lt;/p&gt;
&lt;p&gt;  当用户在表单里输入邮箱时，会自动提醒邮箱的格式是否正确，而不需要像以前那样用js或者php来进行表单验证。但这样的话，样式我目前还不到能否进行控制。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE HTML&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;form&amp;gt;E-mail: &amp;lt;input type=&amp;quot;email&amp;quot; /&amp;gt;&amp;lt;br /&amp;gt;
&amp;lt;input type=&amp;quot;submit&amp;quot; /&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;  &lt;pre&gt;&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;body&gt;&lt;form&gt;E-mail: &lt;input type=&quot;email&quot;&gt;&lt;br&gt;&lt;input type=&quot;submit&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Input 类型 - url&lt;/p&gt;
&lt;p&gt;  url是判断输入地址是否为网址。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE HTML&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;form&amp;gt;
url: &amp;lt;input type=&amp;quot;url&amp;quot; /&amp;gt;&amp;lt;br /&amp;gt;
&amp;lt;input type=&amp;quot;submit&amp;quot; /&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;  &lt;pre&gt;&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;body&gt;&lt;form&gt;url: &lt;input type=&quot;url&quot;&gt;&lt;br&gt;&lt;input type=&quot;submit&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Input 类型 - number&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE HTML&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;form&amp;gt;
number: &amp;lt;input type=&amp;quot;number&amp;quot;  min=&amp;quot;-1&amp;quot; max=&amp;quot;10&amp;quot; step=&amp;quot;3&amp;quot; value=&amp;quot;2&amp;quot; /&amp;gt;&amp;lt;br /&amp;gt;
&amp;lt;input type=&amp;quot;submit&amp;quot; /&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;  &lt;pre&gt;&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;body&gt;&lt;form&gt;number: &lt;input type=&quot;number&quot; min=&quot;-1&quot; max=&quot;10&quot; step=&quot;3&quot; value=&quot;2&quot;&gt;&lt;br&gt;&lt;input type=&quot;submit&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Input 类型 - range&lt;/p&gt;
&lt;p&gt;  这是个我认为很神奇的东西，很简单的就实现了如音量控制，进度条的数据传输。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE HTML&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;form&amp;gt;
points: &amp;lt;input type=&amp;quot;range&amp;quot;  min=&amp;quot;1&amp;quot; max=&amp;quot;10&amp;quot; /&amp;gt;&amp;lt;br /&amp;gt;
&amp;lt;input type=&amp;quot;submit&amp;quot; /&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;  &lt;pre&gt;&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;body&gt;&lt;form&gt;points: &lt;input type=&quot;range&quot; min=&quot;1&quot; max=&quot;10&quot;&gt;&lt;br&gt;&lt;input type=&quot;submit&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Input 类型 - Date Pickers（日期选择器）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE HTML&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;form&amp;gt;
date: &amp;lt;input type=&amp;quot;date&amp;quot; /&amp;gt;&amp;lt;br /&amp;gt;
time: &amp;lt;input type=&amp;quot;time&amp;quot; /&amp;gt;&amp;lt;br /&amp;gt;
datetime-local: &amp;lt;input type=&amp;quot;datetime-local&amp;quot; /&amp;gt;&amp;lt;br /&amp;gt;
week: &amp;lt;input type=&amp;quot;week&amp;quot; /&amp;gt;&amp;lt;br /&amp;gt;
&amp;lt;input type=&amp;quot;submit&amp;quot; /&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;  &lt;pre&gt;&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;body&gt;&lt;form&gt;date: &lt;input type=&quot;date&quot;&gt;&lt;br&gt;time: &lt;input type=&quot;time&quot;&gt;&lt;br&gt;datetime-local: &lt;input type=&quot;datetime-local&quot;&gt;&lt;br&gt;week: &lt;input type=&quot;week&quot;&gt;&lt;br&gt;&lt;input type=&quot;submit&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Input 类型 - search&lt;/p&gt;
&lt;p&gt;  search 类型用于搜索域，比如站点搜索或 Google 搜索&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE HTML&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;form&amp;gt;
Search&amp;lt;input type=&amp;quot;search&amp;quot; placeholder=&amp;quot;测试搜索&amp;quot; autosave=&amp;quot;aoao.org.cn&amp;quot; result=&amp;quot;8&amp;quot;&amp;gt;
&amp;lt;input type=&amp;quot;submit&amp;quot; name=&amp;quot;Search&amp;quot; value=&amp;quot;Search&amp;quot;/&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;pre&amp;gt;&amp;lt;!DOCTYPE HTML&amp;gt;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;form&amp;gt;Search&amp;lt;input type=&amp;quot;search&amp;quot; placeholder=&amp;quot;测试搜索&amp;quot;autosave=&amp;quot;aoao.org.cn&amp;quot; result=&amp;quot;8&amp;quot;&amp;gt;&amp;lt;input type=&amp;quot;submit&amp;quot; name=&amp;quot;Search&amp;quot; value=&amp;quot;Search&amp;quot;/&amp;gt;&amp;lt;/form&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;音频、视频API&quot;&gt;&lt;a href=&quot;#音频、视频API&quot; class=&quot;headerlink&quot; title=&quot;音频、视频API&quot;&gt;&lt;/a&gt;音频、视频API&lt;/h2&gt;&lt;p&gt;今天，大多数视频是通过插件（比如 Flash）来显示的。然而，并非所有浏览器都拥有同样的插件。&lt;/p&gt;
&lt;p&gt;HTML5 规定了一种通过 video 元素来包含视频的标准方法&lt;/p&gt;
&lt;p&gt;一般要插入一段视频，可以这样做&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE HTML&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;video src=&amp;quot;/i/movie.ogg&amp;quot;  width=&amp;quot;320&amp;quot; height=&amp;quot;240&amp;quot; controls=&amp;quot;controls&amp;quot;&amp;gt;
Your browser does not support the video tag.
&amp;lt;/video&amp;gt;

&amp;lt;audio src=&amp;quot;/i/song.ogg&amp;quot; controls=&amp;quot;controls&amp;quot;&amp;gt;
Your browser does not support the audio element.
&amp;lt;/audio&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;control 属性供添加播放、暂停和音量控件，video 与 video之间插入的内容是供不支持 video 元素的浏览器显示的。audio也是一样的。其中更多的是对video和audio属性的记忆，自己以前也在更改视频播放那些控件的样式花了不少功夫。&lt;/p&gt;
&lt;h2 id=&quot;画布-Canvas-API&quot;&gt;&lt;a href=&quot;#画布-Canvas-API&quot; class=&quot;headerlink&quot; title=&quot;画布(Canvas) API&quot;&gt;&lt;/a&gt;画布(Canvas) API&lt;/h2&gt;&lt;h3 id=&quot;canvas&quot;&gt;&lt;a href=&quot;#canvas&quot; class=&quot;headerlink&quot; title=&quot;canvas&quot;&gt;&lt;/a&gt;canvas&lt;/h3&gt;&lt;p&gt;canvas 元素用于在网页上绘制图形。&lt;/p&gt;
&lt;p&gt;HTML5 的 canvas 元素使用 JavaScript 在网页上绘制图像。&lt;/p&gt;
&lt;h3 id=&quot;SVG&quot;&gt;&lt;a href=&quot;#SVG&quot; class=&quot;headerlink&quot; title=&quot;SVG&quot;&gt;&lt;/a&gt;SVG&lt;/h3&gt;&lt;p&gt;在浏览器中创建图形还可以用SVG&lt;/p&gt;
&lt;p&gt;SVG 是一种使用 XML 描述 2D 图形的语言。&lt;/p&gt;
&lt;h2 id=&quot;拖拽释放-Drag-and-drop-API&quot;&gt;&lt;a href=&quot;#拖拽释放-Drag-and-drop-API&quot; class=&quot;headerlink&quot; title=&quot;拖拽释放(Drag and drop) API&quot;&gt;&lt;/a&gt;拖拽释放(Drag and drop) API&lt;/h2&gt;&lt;p&gt;在 HTML5 中，&lt;strong&gt;任何元素都能够拖放&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;要设置一个元素能够被拖放，需要进行五个步骤&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;设置元素为可拖放&lt;/p&gt;
&lt;p&gt; img的draggable属性设置为true&lt;/p&gt;
&lt;p&gt; &lt;code&gt;&amp;lt;img draggable=&amp;quot;true&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设置拖动的对象 - ondragstart 和 setData()&lt;/p&gt;
&lt;p&gt; 拖动元素数据类型是 Text，值是可拖动元素的 id。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function drag(ev){
ev.dataTransfer.setData(&amp;quot;Text&amp;quot;,ev.id);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;放到何处 - ondragover&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;event.preventDefault()
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;进行放置 - ondrop&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function drop(ev)
{
ev.preventDefault();
var data=ev.dataTransfer.getData(&amp;quot;Text&amp;quot;);
ev.target.appendChild(document.getElementById(data));
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;设置一个元素可拖动还是有点复杂，不过大致的过程很简单，详细的教程可以参照：&lt;a href=&quot;http://blog.csdn.net/lmj623565791/article/details/31413767&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/lmj623565791/article/details/31413767 &lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;新的特殊内容元素&lt;/li&gt;
&lt;li&gt;新的表单控件&lt;/li&gt;
&lt;li&gt;音频、视频API&lt;/li&gt;
&lt;li&gt;画布(Canvas) API&lt;/li&gt;
&lt;li&gt;地理(Geolocation) API&lt;/li&gt;
&lt;li&gt;拖拽释放(Drag and drop) API&lt;/li&gt;
&lt;li&gt;网页存储(Web storage) API&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CSS的基础学习7 -总结</title>
    <link href="http://shuang13.coding.me/2016/07/26/css%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    <id>http://shuang13.coding.me/2016/07/26/css学习总结/</id>
    <published>2016-07-26T04:04:14.000Z</published>
    <updated>2016-08-08T17:15:15.346Z</updated>
    
    <content type="html">&lt;p&gt;本次作业我采用的是用markdown来写博客的形式来学习css,把学习过程中的那些概念自己看几遍，理解后，按照自己的理解在打出来，对于很多基础的东西都有了更深的理解，也记得更牢。虽然这样学习速度很慢，但把学到的东西转换为了自己的东西，还是可以。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;最后自己学习过程中遇到了几个小知识点，写一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;b和strong有啥区别？那i和em的区别呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;两者都可以加粗，而strong带有强调的意思，b只是单纯的加粗，一般建议用strong,浏览器搜索是也优先级高，一个是物理元素，一个是逻辑元素。同样i和em一样，em比strong更强烈强调&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;display: none和 visibility: hidden 有什么区别?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;none表示没有，就不会占位置空间。&lt;/li&gt;
&lt;li&gt;hidden表示藏起来了，他还在那，占着位置空间。&lt;/li&gt;
&lt;li&gt;让元素隐藏还可以设置&lt;ul&gt;
&lt;li&gt;宽高为0&lt;/li&gt;
&lt;li&gt;设置透明度为0&lt;/li&gt;
&lt;li&gt;设置z-index位置在-1000&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;src与href的区别&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;src是引入，是指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置， img、script、iframe 等元素上使用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;href是引用，指向网络资源所在位置，link和a 等元素上使用&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本次作业我采用的是用markdown来写博客的形式来学习css,把学习过程中的那些概念自己看几遍，理解后，按照自己的理解在打出来，对于很多基础的东西都有了更深的理解，也记得更牢。虽然这样学习速度很慢，但把学到的东西转换为了自己的东西，还是可以。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CSS的基础学习6 -浮动与定位</title>
    <link href="http://shuang13.coding.me/2016/07/25/css%E6%B5%AE%E5%8A%A8%E4%B8%8E%E5%AE%9A%E4%BD%8D/"/>
    <id>http://shuang13.coding.me/2016/07/25/css浮动与定位/</id>
    <published>2016-07-25T04:04:14.000Z</published>
    <updated>2016-08-08T17:12:16.652Z</updated>
    
    <content type="html">&lt;h2 id=&quot;CSS定位&quot;&gt;&lt;a href=&quot;#CSS定位&quot; class=&quot;headerlink&quot; title=&quot;CSS定位&quot;&gt;&lt;/a&gt;CSS定位&lt;/h2&gt;&lt;p&gt;CSS有三种基本的定位：普通流、 浮动、绝对定位&lt;/p&gt;
&lt;p&gt;普通流就是浏览器对块级元素、行内元素等默认的排列方式。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;浮动&quot;&gt;&lt;a href=&quot;#浮动&quot; class=&quot;headerlink&quot; title=&quot;浮动&quot;&gt;&lt;/a&gt;浮动&lt;/h3&gt;&lt;p&gt;CSS允许任何元素浮动，浮动元素相当于会从正常的文本流中删除。最开始float是用来做文字环绕效果的。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;img src=&amp;quot;http://img3.duitang.com/uploads/item/201606/17/20160617162436_JcNwY.thumb.700_0.jpeg&amp;quot; style=&amp;quot;width:100px;float:left;&amp;quot; &amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;html&gt;&lt;br&gt;&lt;body&gt;&lt;br&gt;&lt;div&gt;&lt;img src=&quot;http://img3.imgtn.bdimg.com/it/u=4109883987,3297169276&amp;fm=11&amp;gp=0.jpg&quot; style=&quot;width:100px;float:left;&quot;&gt;蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆蕾姆&lt;br&gt;&lt;/div&gt;&lt;br&gt;&lt;/body&gt;&lt;br&gt;&lt;/html&gt;

&lt;p&gt;&lt;strong&gt;float主要用于横向排版、或者多列布局，虽然好用，但也有很多问题，比如浮动会造成的父元素高度塌陷。&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div style=&amp;quot;border:1px solid #000;padding:10px;&amp;quot; &amp;gt;&amp;lt;img src=&amp;quot;http://img3.duitang.com/uploads/item/201606/17/20160617162436_JcNwY.thumb.700_0.jpeg&amp;quot; style=&amp;quot;width:100px;&amp;quot; &amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;html&gt;&lt;body&gt;&lt;div style=&quot;border:1px solid #000;padding:10px;&quot;&gt;&lt;img src=&quot;http://img3.imgtn.bdimg.com/it/u=4109883987,3297169276&amp;fm=11&amp;gp=0.jpg&quot; style=&quot;width:100px;&quot;&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;加上浮动&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div style=&amp;quot;border:1px solid #000;padding:10px;&amp;quot; &amp;gt;&amp;lt;img src=&amp;quot;http://img3.duitang.com/uploads/item/201606/17/20160617162436_JcNwY.thumb.700_0.jpeg&amp;quot; style=&amp;quot;width:100px;float:left;&amp;quot; &amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;html&gt;&lt;body&gt;&lt;div style=&quot;border:1px solid #000;padding:10px;&quot;&gt;&lt;img src=&quot;http://img3.imgtn.bdimg.com/it/u=4109883987,3297169276&amp;fm=11&amp;gp=0.jpg&quot; style=&quot;width:100px;float:left;&quot;&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;加上浮动后，父元素出现了坍塌现象，主要是因为float让元素脱离了文本流。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当对父级元素加上float后，会出现包裹性。&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div style=&amp;quot;border:1px solid #000;padding:10px;float:left;&amp;quot; &amp;gt;&amp;lt;img src=&amp;quot;http://img3.duitang.com/uploads/item/201606/17/20160617162436_JcNwY.thumb.700_0.jpeg&amp;quot; style=&amp;quot;width:100px;&amp;quot; &amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;html&gt;&lt;body&gt;&lt;div style=&quot;border:1px solid #000;padding:10px;float:left;&quot;&gt;&lt;img src=&quot;http://img3.imgtn.bdimg.com/it/u=4109883987,3297169276&amp;fm=11&amp;gp=0.jpg&quot; style=&quot;width:100px;&quot;&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;另外float还具有清空格的作用，如img之间默认会有空格，添加float后就会排布紧密了。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;清除浮动&quot;&gt;&lt;a href=&quot;#清除浮动&quot; class=&quot;headerlink&quot; title=&quot;清除浮动&quot;&gt;&lt;/a&gt;清除浮动&lt;/h3&gt;&lt;p&gt;清除浮动有很多方法，有的博客都列举了8个多，我觉得掌握几个基本的就可以了，其他有些也很麻烦，只做了解。常见的方法先列举几个。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;给父级元素设置浮动&lt;/li&gt;
&lt;li&gt;给父级元素设置固定高度height&lt;/li&gt;
&lt;li&gt;给父级元素定义 overflow:hidden&lt;/li&gt;
&lt;li&gt;浮动元素结尾处加空div标签设置clear:both&lt;/li&gt;
&lt;li&gt;&lt;p&gt;父级div定义 伪类:after &lt;/p&gt;
&lt;p&gt; div:after{display:block;clear:both;content:””;visibility:hidden;height:0} &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;现在一般都用给父级元素定义 overflow:hidden来清除浮动，而其他的视情况而定。&lt;/p&gt;
&lt;h3 id=&quot;定位&quot;&gt;&lt;a href=&quot;#定位&quot; class=&quot;headerlink&quot; title=&quot;定位&quot;&gt;&lt;/a&gt;定位&lt;/h3&gt;&lt;p&gt;定位的关键字就是position了，我们一般的定位除了网页默认的块级元素和行内元素由上到下、由左到右，然后用设置盒子模型的margin，padding来进行基本移动，再加上浮动float来进行横向排版这些方法外，还有一个不能缺少的定位方法就是运用positon。&lt;/p&gt;
&lt;p&gt;position一共有四个属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;static默认属性&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;relative&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;relative相对定位，会导致自身位置的相对变化，而不会影响其他元素的位置、大小的变化&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;div &amp;gt;123&amp;lt;/div&amp;gt;
&amp;lt;div style=&amp;quot;position:relative;top:10px;left:20px;&amp;quot;&amp;gt;123&amp;lt;/div&amp;gt;
&amp;lt;div &amp;gt;123&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;html&gt;&lt;body&gt;&lt;div&gt;123&lt;/div&gt;&lt;div style=&quot;position:relative;top:10px;left:20px;&quot;&gt;123&lt;/div&gt;&lt;div&gt;123&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;absolute&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;absolute绝对定位，当元素设置absolute之后，就会和float一样脱离普通文本流。且最重要的是absolute的元素对于祖先有absolute或relative的元素进行定位。且absolute一般不跟float同时使用。&lt;/p&gt;
 &lt;pre&gt;&lt;html&gt;&lt;body&gt;&lt;div&gt;123&lt;/div&gt;&lt;div style=&quot;background-color:yellow;&quot;&gt;123&lt;/div&gt;&lt;div&gt;123&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;

&lt;p&gt;加上absolute后：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;div &amp;gt;123&amp;lt;/div&amp;gt;
&amp;lt;div style=&amp;quot;background-color:yellow；position:absolute;&amp;quot;&amp;gt;123&amp;lt;/div&amp;gt;
&amp;lt;div &amp;gt;123&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;html&gt;&lt;body&gt;&lt;div&gt;123&lt;/div&gt;&lt;div style=&quot;background-color:yellow;position:absolute;left:10px;&quot;&gt;123&lt;/div&gt;&lt;div&gt;123&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;

&lt;p&gt;这里体现了absolute的许多特性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;第一个是具有&lt;strong&gt;包裹性&lt;/strong&gt;之前div的宽度是整个屏幕，之后为文字宽度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第二个是&lt;strong&gt;跟随性&lt;/strong&gt;，当没有设置left和top的值的时候是这个样子的 &lt;pre&gt;&lt;html&gt;&lt;body&gt;&lt;div&gt;123&lt;/div&gt;&lt;div style=&quot;background-color:yellow;position:absolute;&quot;&gt;123&lt;/div&gt;&lt;div&gt;123&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;他会待在原位，但不占文本流的位置空间。设置left和top后就会根据上下文来进行定位，也就是absolute的元素对于祖先有absolute或relative的元素进行定位。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;那么我们如果把left改为margin-left呢&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;html&gt;&lt;body&gt;&lt;div&gt;123&lt;/div&gt;&lt;div style=&quot;background-color:yellow;position:absolute;margin-left:10px;&quot;&gt;123&lt;/div&gt;&lt;div&gt;123&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;

&lt;p&gt;这时就会相对原来位置进行移动，可见left和margin-left是有区别的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;fixed&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;fixed和absolute的区别&lt;/p&gt;
&lt;p&gt;absolute元素是根据最近的定位上下文确定位置，而fixed永远根据浏览器确定位置。而relative元素的定位永远是相对于元素自身位置的。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;CSS定位&quot;&gt;&lt;a href=&quot;#CSS定位&quot; class=&quot;headerlink&quot; title=&quot;CSS定位&quot;&gt;&lt;/a&gt;CSS定位&lt;/h2&gt;&lt;p&gt;CSS有三种基本的定位：普通流、 浮动、绝对定位&lt;/p&gt;
&lt;p&gt;普通流就是浏览器对块级元素、行内元素等默认的排列方式。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CSS的基础学习5 -盒模型</title>
    <link href="http://shuang13.coding.me/2016/07/24/css%E7%9B%92%E6%A8%A1%E5%9E%8B/"/>
    <id>http://shuang13.coding.me/2016/07/24/css盒模型/</id>
    <published>2016-07-24T04:04:14.000Z</published>
    <updated>2016-08-08T17:14:50.336Z</updated>
    
    <content type="html">&lt;p&gt;盒模型其实就是内边距padding、边框border、外边距margin，他们三者就构成了一个“盒子”,盒子里装着你想放的元素，其中边框就是内边距和外边距的分界线。盒模型是很基础的东西，但发现盒子模型不仅仅是margin，padding和border，其实还有其他的知识。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;style&amp;gt;
#box1
{
width: 200px;
border:1px solid #000;
background-color:yellow;
}
#box2{
  margin: 10px;
 padding: 5px;
border:10px solid #fff;
background-color:red;
}
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;div id=&amp;quot;box1&amp;quot;&amp;gt;&amp;lt;div id=&amp;quot;box2&amp;quot;&amp;gt;外边距距离父级元素10px;内边距距离内部元素5px;边框厚度10px;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;html&gt;&lt;br&gt;        &lt;head&gt;&lt;br&gt;        &lt;style&gt;&lt;br&gt;        #box1&lt;br&gt;        {&lt;br&gt;        width: 200px;&lt;br&gt;        border:1px solid #000;&lt;br&gt;        background-color:yellow;&lt;br&gt;        }&lt;br&gt;        #box2{&lt;br&gt;          margin: 10px;&lt;br&gt;         padding: 5px;&lt;br&gt;        border:10px solid #000;&lt;br&gt;        background-color:red;&lt;br&gt;        }&lt;br&gt;        &lt;/style&gt;&lt;br&gt;        &lt;/head&gt;&lt;br&gt;        &lt;body&gt;&lt;br&gt;        &lt;div id=&quot;box1&quot;&gt;&lt;div id=&quot;box2&quot;&gt;外边距距离父级元素10px;内边距距离内部元素5px;边框厚度10px;&lt;/div&gt;&lt;br&gt;        &lt;/div&gt;&lt;br&gt;        &lt;/body&gt;&lt;br&gt;        &lt;/html&gt;

&lt;p&gt;当我们为这个盒子设置宽度的时候，width的值是盒子内容的宽度，而不是整个盒子的大小，整个盒子的大小是margin+padding+border+width，其中有一项改变了，整个盒子的大小就改变了。当我们设置box-sizing:border-box的时，盒子的大小就不包括margin了，而是boder的外边界的大小。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;style&amp;gt;
#box5
{
width: 200px;
border:1px solid #000;
background-color:yellow;
}
#box6{
width:100px;
  margin: 10px;
 padding: 5px;
border:10px solid #fff;
background-color:red;
box-sizing:border-box;
}
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;div id=&amp;quot;box3&amp;quot;&amp;gt;&amp;lt;div id=&amp;quot;box4&amp;quot;&amp;gt;文本内容100px&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;html&gt;&lt;br&gt;        &lt;head&gt;&lt;br&gt;        &lt;style&gt;&lt;br&gt;        #box3&lt;br&gt;        {&lt;br&gt;        width: 200px;&lt;br&gt;        border:1px solid #000;&lt;br&gt;        background-color:yellow;&lt;br&gt;        }&lt;br&gt;        #box4{&lt;br&gt;        width:100px;&lt;br&gt;          margin: 10px;&lt;br&gt;         padding: 5px;&lt;br&gt;        border:10px solid #fff;&lt;br&gt;        background-color:red;&lt;br&gt;        }&lt;br&gt;        &lt;/style&gt;&lt;br&gt;        &lt;/head&gt;&lt;br&gt;        &lt;body&gt;&lt;br&gt;        &lt;div id=&quot;box3&quot;&gt;&lt;div id=&quot;box4&quot;&gt;文本内容100px&lt;/div&gt;&lt;br&gt;        &lt;/div&gt;&lt;br&gt;        &lt;/body&gt;&lt;br&gt;        &lt;/html&gt;

&lt;html&gt;&lt;br&gt;        &lt;head&gt;&lt;br&gt;        &lt;style&gt;&lt;br&gt;        #box5&lt;br&gt;        {&lt;br&gt;        width: 200px;&lt;br&gt;        border:1px solid #000;&lt;br&gt;        background-color:yellow;&lt;br&gt;        }&lt;br&gt;        #box6{&lt;br&gt;        width:100px;&lt;br&gt;          margin: 10px;&lt;br&gt;         padding: 5px;&lt;br&gt;        border:10px solid #fff;&lt;br&gt;        background-color:red;&lt;br&gt;        box-sizing:border-box;&lt;br&gt;        }&lt;br&gt;        &lt;/style&gt;&lt;br&gt;        &lt;/head&gt;&lt;br&gt;        &lt;body&gt;&lt;br&gt;        &lt;div id=&quot;box5&quot;&gt;&lt;div id=&quot;box6&quot;&gt;不包含margin,文本加padding加边框大小总共为100px&lt;/div&gt;&lt;br&gt;        &lt;/div&gt;&lt;br&gt;        &lt;/body&gt;&lt;br&gt;        &lt;/html&gt;

&lt;p&gt;建议以后写css时候，把box-sizing:border-box;设置好&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*{
padding:0;
margin:0;
box-sizing:border-box;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;margin–纵向重叠&quot;&gt;&lt;a href=&quot;#margin–纵向重叠&quot; class=&quot;headerlink&quot; title=&quot;margin–纵向重叠&quot;&gt;&lt;/a&gt;margin–纵向重叠&lt;/h4&gt;&lt;p&gt;两个段落之间纵向的距离按常理来说应该是 10 + 10 = 20px，但是实际还是为10px&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;style&amp;gt;
.prom{
margin:10px;
}
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;div class=&amp;quot;prom&amp;quot;&amp;gt;123&amp;lt;/div&amp;gt;
&amp;lt;div class=&amp;quot;prom&amp;quot;&amp;gt;123&amp;lt;/div&amp;gt;
&amp;lt;div class=&amp;quot;prom&amp;quot;&amp;gt;123&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;html&gt;&lt;head&gt;&lt;style&gt;.prom{margin:10px;}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=&quot;prom&quot;&gt;123&lt;/div&gt;&lt;div class=&quot;prom&quot;&gt;123&lt;/div&gt;&lt;div class=&quot;prom&quot;&gt;123&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;

&lt;p&gt;横向的话就不会,把div改为a标签后&lt;/p&gt;
&lt;pre&gt;&lt;html&gt;&lt;head&gt;&lt;style&gt;.prom{margin:10px;}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;a class=&quot;prom&quot;&gt;123&lt;/a&gt;&lt;a class=&quot;prom&quot;&gt;123&lt;/a&gt;&lt;a class=&quot;prom&quot;&gt;123&lt;/a&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;

&lt;p&gt;经过测量123之间为20px&lt;/p&gt;
&lt;p&gt;且纵向重叠大的会吃掉小的，纵向两元素相隔为当中的最大值&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;max-width:给元素设置最大宽度值&lt;/li&gt;
&lt;li&gt;min-width:给元素设置最小宽度值&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;max-width 会覆盖width设置, 但 min-width设置会覆盖 max-width.&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;盒模型其实就是内边距padding、边框border、外边距margin，他们三者就构成了一个“盒子”,盒子里装着你想放的元素，其中边框就是内边距和外边距的分界线。盒模型是很基础的东西，但发现盒子模型不仅仅是margin，padding和border，其实还有其他的知识。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CSS的基础学习4 -页面呈现</title>
    <link href="http://shuang13.coding.me/2016/07/23/css%E9%A1%B5%E9%9D%A2%E5%91%88%E7%8E%B0/"/>
    <id>http://shuang13.coding.me/2016/07/23/css页面呈现/</id>
    <published>2016-07-23T04:04:14.000Z</published>
    <updated>2016-08-08T17:14:45.771Z</updated>
    
    <content type="html">&lt;p&gt;这段时间我主要看的是《CSS权威指南》且自己边学边查阅了一些资料，终于稍微理清了自己的css知识框架。如今已经知道css要与html结合，就是通过以上所说的选择器，选择器最重要的就是级别。下一步，就是网页是如何呈现出来的了。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;页面呈现可以分为两类：1 文字；2 块&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;文字包括设置字体、字号、样式、颜色、对齐方式等&lt;/li&gt;
&lt;li&gt;而块就大概包括：普通流、盒子模型、浮动、定位position、显示display等&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;首先需要知道的就是在css中，html标签元素要分为块级元素、行内元素、内联块状元素。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;块级元素 display:block&lt;/p&gt;
&lt;p&gt;  &lt;code&gt;&amp;lt;div&amp;gt;、&amp;lt;p&amp;gt;、&amp;lt;h1&amp;gt;...&amp;lt;h6&amp;gt;、&amp;lt;ol&amp;gt;、&amp;lt;ul&amp;gt;、&amp;lt;dl&amp;gt;、&amp;lt;table&amp;gt;、&amp;lt;address&amp;gt;、&amp;lt;blockquote&amp;gt; 、&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;行内元素 display:inline&lt;/p&gt;
&lt;p&gt;  &lt;code&gt;&amp;lt;a&amp;gt;、&amp;lt;span&amp;gt;、&amp;lt;br&amp;gt;、&amp;lt;i&amp;gt;、&amp;lt;em&amp;gt;、&amp;lt;strong&amp;gt;、&amp;lt;label&amp;gt;、&amp;lt;q&amp;gt;、&amp;lt;var&amp;gt;、&amp;lt;cite&amp;gt;、&amp;lt;code&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;内联块状元素 display:inline-block&lt;/p&gt;
&lt;p&gt;  &lt;code&gt;&amp;lt;img&amp;gt;、&amp;lt;input&amp;gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上是浏览器默认的元素是行内还是块级元素，顾名思义行内元素就是在网页文本中在一行中挨着排下去，而块级元素就相当于一个大块头老大，一个人独占一行。内联块级元素虽然块头很大，但内心跟行内元素是一样的愿意在一行中与大家一起挤着。当然我们就可以通过设置display属性来改变元素所在的位置了。&lt;/p&gt;
&lt;p&gt;且块级元素宽度(width)、高度(height)、内边距(padding)和外边距(margin)都可控制，而行内元素不行。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这段时间我主要看的是《CSS权威指南》且自己边学边查阅了一些资料，终于稍微理清了自己的css知识框架。如今已经知道css要与html结合，就是通过以上所说的选择器，选择器最重要的就是级别。下一步，就是网页是如何呈现出来的了。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CSS的基础学习3 -css优先级</title>
    <link href="http://shuang13.coding.me/2016/07/22/css%E4%BC%98%E5%85%88%E7%BA%A7/"/>
    <id>http://shuang13.coding.me/2016/07/22/css优先级/</id>
    <published>2016-07-22T04:04:14.000Z</published>
    <updated>2016-08-08T17:14:09.750Z</updated>
    
    <content type="html">&lt;p&gt;CSS的优先级也是一个很容易忽视的基础点，我对这方面也没仔细学过，所以就像加减乘法的优先级一样，必须牢记这些优先级。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;CSS优先级&quot;&gt;&lt;a href=&quot;#CSS优先级&quot; class=&quot;headerlink&quot; title=&quot;CSS优先级&quot;&gt;&lt;/a&gt;CSS优先级&lt;/h3&gt;&lt;p&gt;如果从高到低的顺序排列的话：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在属性后面加！important。它相当于最高命令，会覆盖所有样式。&lt;/p&gt;
&lt;p&gt; box{color:red !important;}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;老二是直接在html标签中添加style属性，也就是内联样式。&lt;/p&gt;
&lt;p&gt; &lt;code&gt;&amp;lt;p style=&amp;quot;color: red; margin-left: 20px&amp;quot;&amp;gt;This is a paragraph&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第三级优先的属性是由一个或多个id选择器来定义的。例如 #id{margin:0;} 会覆盖 .classname{margin:10px;}。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;style&amp;gt;
#idname
{
background-color:yellow;
}
.classname
{
background-color:red;
}
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;div id=&amp;quot;idname&amp;quot; class=&amp;quot;classname&amp;quot;&amp;gt;
&amp;lt;p&amp;gt;子代选择器&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;子代选择器&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;p&amp;gt;其他段落&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;html&gt;&lt;head&gt;&lt;style&gt;#idname{background-color:yellow;}.classname{background-color:red;}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=&quot;idname&quot; class=&quot;classname&quot;&gt;&lt;p&gt;子代选择器&lt;/p&gt;&lt;p&gt;子代选择器&lt;/p&gt;&lt;/div&gt;&lt;p&gt;其他段落&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第四优先级是由一个或多个 类选择器、属性选择器、伪类选择器定义.如 .classname{margin:3px;} 会覆盖 div{margin:6px;}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;第五级由一个或多个 类型选择器定义。如 div{margin:6px;}  覆盖  *{margin:10px;} 。&lt;/li&gt;
&lt;li&gt;所以通配选择器就是最低的一级了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;平时还会遇到多个相同级别的CSS选择器优先级，这个时候就要从位置上来分级了：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;位于head标签里的style中所定义的CSS拥有最高级的优先权。也就是&lt;strong&gt;内部样式表&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第二级的优先属性由位于 style标签中的 @import 引入样式表所&lt;br&gt;定义。&lt;/p&gt;
&lt;p&gt; @import语法结构&lt;br&gt; @import + 空格+ url(CSS文件路径地址);&lt;br&gt; 在html和css文件中均可使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;第三级的优先属性由link标签所引入的样式表定义。也就是&lt;strong&gt;外部样式表&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;第四级的优先属性由link标签所引入的样式表内的 @import 导入样式表定义。&lt;/li&gt;
&lt;li&gt;第五级优先的样式有用户设定。&lt;/li&gt;
&lt;li&gt;最低级的优先权由浏览器默认。&lt;/li&gt;
&lt;li&gt;如果是同一个选择器，同一个属性，是从前到后，后面的会覆盖前面的样式。&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;CSS的优先级也是一个很容易忽视的基础点，我对这方面也没仔细学过，所以就像加减乘法的优先级一样，必须牢记这些优先级。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CSS的基础学习2 -选择器</title>
    <link href="http://shuang13.coding.me/2016/07/21/css%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <id>http://shuang13.coding.me/2016/07/21/css选择器/</id>
    <published>2016-07-21T04:04:14.000Z</published>
    <updated>2016-08-08T17:16:47.723Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;常用选择器&lt;/li&gt;
&lt;li&gt;组合选择器&lt;/li&gt;
&lt;/ol&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;常用选择器：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;类选择器 .class &lt;/p&gt;
&lt;p&gt;  &lt;code&gt;.word {color:red;}&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;style&amp;gt;
.word {color:red;}
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;div class=&amp;quot;word&amp;quot;&amp;gt;
&amp;lt;p&amp;gt;类选择器类选择器&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;  &lt;pre&gt;&lt;html&gt;&lt;head&gt;&lt;style&gt;.word {color:red;}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=&quot;word&quot;&gt;&lt;p&gt;类选择器类选择器&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;id选择器 #id&lt;/p&gt;
&lt;p&gt;  &lt;code&gt;#word {color:red;}&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;style&amp;gt;
#word {color:red;}
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;div id=&amp;quot;word&amp;quot;&amp;gt;
&amp;lt;p&amp;gt;id选择器id选择器&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;  &lt;pre&gt;&lt;html&gt;&lt;head&gt;&lt;style&gt;#word {color:red;}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=&quot;word&quot;&gt;&lt;p&gt;id选择器id选择器&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通配符 *&lt;/p&gt;
&lt;p&gt;  &lt;code&gt;* {margin:0; padding:0;}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;元素选择器 element&lt;/p&gt;
&lt;p&gt;  &lt;code&gt;p {color:red;}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;属性选择器 [attribute]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;`.at[target]{
background-color:yellow;
}`

    &amp;lt;html&amp;gt;
    &amp;lt;head&amp;gt;
    &amp;lt;style&amp;gt;
    .at[target]{
    background-color:yellow;
    }
    &amp;lt;/style&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
    &amp;lt;div&amp;gt;
    &amp;lt;a class=&amp;quot;at&amp;quot; target=&amp;apos;##&amp;apos;&amp;gt;属性选择器属性选择器&amp;lt;/a&amp;gt;&amp;lt;/br&amp;gt;
    &amp;lt;a&amp;gt;没有target没有target&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;/body&amp;gt;
    &amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;html&gt;&lt;head&gt;&lt;style&gt;.at[target]{background-color:yellow;}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div&gt;&lt;a class=&quot;at&quot; target=&quot;_blank&quot;&gt;属性选择器属性选择器&lt;/a&gt;&lt;br&gt;&lt;a&gt;没有target没有target&lt;/a&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;- 伪类选择器 name:伪类
    &amp;lt;/br&amp;gt;伪类有许多常见的有：hover,:after,:before,:first-child,:last-child等
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;组合选择器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;群组选择器 name1,name2&lt;/li&gt;
&lt;li&gt;后代选择器 name1 name2&lt;/li&gt;
&lt;li&gt;&lt;p&gt;相邻兄弟选择器 name1 + name2&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;style&amp;gt;
.name1+p
{
background-color:yellow;
}
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;div class=&amp;quot;name1&amp;quot;&amp;gt;
&amp;lt;p&amp;gt;相邻兄弟选择器&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;相邻兄弟选择器&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;p&amp;gt;相邻兄弟选择器&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;  &lt;pre&gt;&lt;html&gt;&lt;head&gt;&lt;style&gt;.name1+p{background-color:yellow;}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=&quot;name1&quot;&gt;&lt;p&gt;相邻兄弟选择器&lt;/p&gt;&lt;p&gt;相邻兄弟选择器&lt;/p&gt;&lt;/div&gt;&lt;p&gt;相邻兄弟选择器&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;子代选择器 name1 &amp;gt; name2&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;style&amp;gt;
.name2 &amp;gt; p
{
background-color:yellow;
}
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;div class=&amp;quot;name2&amp;quot;&amp;gt;
&amp;lt;p&amp;gt;子代选择器&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;子代选择器&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;p&amp;gt;其他段落&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;  &lt;pre&gt;&lt;html&gt;&lt;head&gt;&lt;style&gt;.name2 &gt; p{background-color:yellow;}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=&quot;name2&quot;&gt;&lt;p&gt;子代选择器&lt;/p&gt;&lt;p&gt;子代选择器&lt;/p&gt;&lt;/div&gt;&lt;p&gt;其他段落&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;子代选择器与后代选择器的区别&quot;&gt;&lt;a href=&quot;#子代选择器与后代选择器的区别&quot; class=&quot;headerlink&quot; title=&quot;子代选择器与后代选择器的区别&quot;&gt;&lt;/a&gt;子代选择器与后代选择器的区别&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;子代选择器只对子代有用，而后代选择器不仅对子代对孙代，曾孙代都有用。&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;常用选择器&lt;/li&gt;
&lt;li&gt;组合选择器&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CSS的基础学习1 -命名与书写规范</title>
    <link href="http://shuang13.coding.me/2016/07/20/css%E5%91%BD%E5%90%8D/"/>
    <id>http://shuang13.coding.me/2016/07/20/css命名/</id>
    <published>2016-07-20T04:04:14.000Z</published>
    <updated>2016-08-08T17:13:28.217Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前文&quot;&gt;&lt;a href=&quot;#前文&quot; class=&quot;headerlink&quot; title=&quot;前文&quot;&gt;&lt;/a&gt;前文&lt;/h2&gt;&lt;p&gt;css包含许多东西，自己也知道在css方面基础不够扎实，本周的学习我计划从几个我自认为不足的方面进行学习，在css的基本语法方面我就不进行过多的学习了。然后在学习中的例子，保证自己亲手把代码打出来，不要只是复制粘贴，希望以此能记得牢一些。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;CSS的命名与书写规范&quot;&gt;&lt;a href=&quot;#CSS的命名与书写规范&quot; class=&quot;headerlink&quot; title=&quot;CSS的命名与书写规范&quot;&gt;&lt;/a&gt;CSS的命名与书写规范&lt;/h2&gt;&lt;p&gt;我觉得在写网页的时候，书写规范是十分重要的，既能保证自己的清晰思路，也能让别人更好的看懂你的代码。但我对这方面也没重视过，当回去看自己原来的代码时，才发现有多么的头疼。所以自己总结了一下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;css类在命名的时候应该全用小写加中划线“-” 的方式，并分清父类与子类，让层次更加清晰&lt;/li&gt;
&lt;li&gt;尽量用英文来概括你这一部分代码样式的含义，也有利于多学几个英文单词&lt;/li&gt;
&lt;li&gt;然后避免class与id的重名，在js中id的命名十分重要，如果与class重名以后其实本身不会发生什么问题，主要怕搞混&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;CSS书写先后顺序&quot;&gt;&lt;a href=&quot;#CSS书写先后顺序&quot; class=&quot;headerlink&quot; title=&quot;CSS书写先后顺序&quot;&gt;&lt;/a&gt;CSS书写先后顺序&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;位置属性:    &lt;ul&gt;
&lt;li&gt;display&lt;/li&gt;
&lt;li&gt;position&lt;/li&gt;
&lt;li&gt;top、right、bottom、left(顺时针)&lt;/li&gt;
&lt;li&gt;float&lt;/li&gt;
&lt;li&gt;clear&lt;/li&gt;
&lt;li&gt;z-index …&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;盒模型:&lt;ul&gt;
&lt;li&gt;margin&lt;/li&gt;
&lt;li&gt;padding&lt;/li&gt;
&lt;li&gt;width&lt;/li&gt;
&lt;li&gt;height …&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;文字等排版:&lt;ul&gt;
&lt;li&gt;color&lt;/li&gt;
&lt;li&gt;font&lt;/li&gt;
&lt;li&gt;content&lt;/li&gt;
&lt;li&gt;border&lt;/li&gt;
&lt;li&gt;background&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前文&quot;&gt;&lt;a href=&quot;#前文&quot; class=&quot;headerlink&quot; title=&quot;前文&quot;&gt;&lt;/a&gt;前文&lt;/h2&gt;&lt;p&gt;css包含许多东西，自己也知道在css方面基础不够扎实，本周的学习我计划从几个我自认为不足的方面进行学习，在css的基本语法方面我就不进行过多的学习了。然后在学习中的例子，保证自己亲手把代码打出来，不要只是复制粘贴，希望以此能记得牢一些。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Star Hexo</title>
    <link href="http://shuang13.coding.me/2016/06/13/Start%20Hexo/"/>
    <id>http://shuang13.coding.me/2016/06/13/Start Hexo/</id>
    <published>2016-06-13T15:50:35.867Z</published>
    <updated>2016-08-08T16:28:20.555Z</updated>
    
    <content type="html">&lt;p&gt;偶然的机会，了解到可以用github或者cording搭建博客，同时，我自己之前的博客，可能是服务器出了些问题，也导致我的博客一直无法登陆。于是，想到自己重建一个博客，托管在cording上，这下总不会出问题了吧。&lt;br&gt;通过学习，用hexo搭建博客的教程的途中，依然出现了一些问题，不过一次失败，再全部删掉，重新再来一遍，利用已有的经验，第二次，就非常快速简单的成功了，心中非常高兴。主题我也摒弃繁杂华丽，改为简约大气风。管理起来，方便一些，看着也舒服。&lt;/p&gt;
&lt;p&gt;详细教程：&lt;a href=&quot;http://opiece.me/2015/04/09/hexo-guide/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://opiece.me/2015/04/09/hexo-guide/&lt;/a&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最后通过这个博客，希望把大学生活的一些有意义的东西记载下来，技术上的，文学上的，生活上的，都好好的保存在这个博客上，这比用那些奖状来证明自己真实、有意义得多。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;偶然的机会，了解到可以用github或者cording搭建博客，同时，我自己之前的博客，可能是服务器出了些问题，也导致我的博客一直无法登陆。于是，想到自己重建一个博客，托管在cording上，这下总不会出问题了吧。&lt;br&gt;通过学习，用hexo搭建博客的教程的途中，依然出现了一些问题，不过一次失败，再全部删掉，重新再来一遍，利用已有的经验，第二次，就非常快速简单的成功了，心中非常高兴。主题我也摒弃繁杂华丽，改为简约大气风。管理起来，方便一些，看着也舒服。&lt;/p&gt;
&lt;p&gt;详细教程：&lt;a href=&quot;http://opiece.me/2015/04/09/hexo-guide/&quot;&gt;http://opiece.me/2015/04/09/hexo-guide/&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>书坊 -《一生》</title>
    <link href="http://shuang13.coding.me/2015/12/17/%E4%B9%A6%E5%9D%8A-%E4%B8%80%E7%94%9F/"/>
    <id>http://shuang13.coding.me/2015/12/17/书坊-一生/</id>
    <published>2015-12-17T05:41:00.000Z</published>
    <updated>2016-08-09T03:12:19.782Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://img3.doubanio.com/mpic/s5643391.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;作者-莫泊桑&quot;&gt;&lt;a href=&quot;#作者-莫泊桑&quot; class=&quot;headerlink&quot; title=&quot;作者: 莫泊桑&quot;&gt;&lt;/a&gt;作者: 莫泊桑&lt;/h3&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;这本书我觉得最好的就是环境描写很好，其次通过描写一个贵族女子追求幸福而不可得的一生概括出了人们生活的一种基本状态：人生既不像我们想象的那么好，也不像我们想象的那么坏。女主人公开始渴望爱情，但得不到的才是最好的，得到之后，才知道背后的欺骗。这本书让我想起了路遥的《人生》，同样的悲情，不同的感觉。&lt;/p&gt;
&lt;p&gt;其中这句话概括得很好：生活不可能像你想象得那么好，但也不会像你想象得那么糟。我觉得人的脆弱和坚强都超乎自己的想象。有时，我可能脆弱得一句话就泪流满面，有时，也发现自己咬着牙走了很长的路。&lt;/p&gt;
&lt;p&gt;——莫泊桑&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img3.doubanio.com/mpic/s5643391.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;作者-莫泊桑&quot;&gt;&lt;a href=&quot;#作者-莫泊桑&quot; class=&quot;headerlink&quot; title=&quot;作者: 莫泊桑&quot;&gt;&lt;/a&gt;作者: 莫泊桑&lt;/h3&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Bootstrap 学习笔记(1)</title>
    <link href="http://shuang13.coding.me/2015/12/14/%E4%B9%A6%E5%9D%8A-%E8%BF%BD%E9%A3%8E%E7%AD%9D%E7%9A%84%E4%BA%BA/"/>
    <id>http://shuang13.coding.me/2015/12/14/书坊-追风筝的人/</id>
    <published>2015-12-14T05:38:00.000Z</published>
    <updated>2016-08-09T03:15:49.129Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://img3.doubanio.com/mpic/s1727290.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;作者-美-卡勒德·胡赛尼&quot;&gt;&lt;a href=&quot;#作者-美-卡勒德·胡赛尼&quot; class=&quot;headerlink&quot; title=&quot;作者: (美)卡勒德·胡赛尼&quot;&gt;&lt;/a&gt;作者: (美)卡勒德·胡赛尼&lt;/h3&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;这本书很好看，花了一个晚上一口气看完，从开始的讨厌文中主人公的懦弱，同情哈桑的命运，到为他们那种真挚的友情兄弟情而感动，文字中一会让人感到残酷，又一会让人感到温暖。真的要好好珍惜身边的每一个人，珍惜每一个对你好的人，珍惜那些美好的回忆，犹如那空中的风筝一般，尽管飞走，也要去追逐，去寻找。。。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img3.doubanio.com/mpic/s1727290.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;作者-美-卡勒德·胡赛尼&quot;&gt;&lt;a href=&quot;#作者-美-卡勒德·胡赛尼&quot; class=&quot;headerlink&quot; title=&quot;作者: (美)卡勒德·胡赛尼&quot;&gt;&lt;/a&gt;作者: (美)卡勒德·胡赛尼&lt;/h3&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>谷歌地图</title>
    <link href="http://shuang13.coding.me/2015/11/22/%E5%9C%B0%E5%9B%BE/"/>
    <id>http://shuang13.coding.me/2015/11/22/地图/</id>
    <published>2015-11-22T09:32:53.000Z</published>
    <updated>2016-08-09T03:18:06.442Z</updated>
    
    <content type="html">&lt;iframe src=&quot;http://www.google.cn/maps/embed?pb=!1m14!1m12!1m3!1d29258579.03395647!2d132.61267425!3d26.468494469270723!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1szh-CN!2scn!4v1448184705889&quot; width=&quot;600&quot; height=&quot;450&quot; frameborder=&quot;0&quot; style=&quot;border:0&quot; allowfullscreen&gt;&lt;/iframe&gt;</content>
    
    <summary type="html">
    
      &lt;iframe src=&quot;http://www.google.cn/maps/embed?pb=!1m14!1m12!1m3!1d29258579.03395647!2d132.61267425!3d26.468494469270723!2m3!1f0!2f0!3f0!3m2!1
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>C语言 学习笔记(1)</title>
    <link href="http://shuang13.coding.me/2015/11/22/C%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0-2/"/>
    <id>http://shuang13.coding.me/2015/11/22/C语言笔记-2/</id>
    <published>2015-11-22T08:35:00.000Z</published>
    <updated>2016-08-09T02:50:02.169Z</updated>
    
    <content type="html">&lt;p&gt;下面是道算法题：&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;![2015-11-20_17-11-59.png][1]&lt;br&gt;我先用c++编写；&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#include &amp;lt;iostream.h&amp;gt;
void main()
{
    char i,j,a[200],ch=&amp;apos; &amp;apos;,t=0;
    cin.getline(a,200);
    for (i=0;a[i]!=&amp;apos;\0&amp;apos;;i++)
    {if (a[i]==&amp;apos;W&amp;apos;&amp;amp;&amp;amp;a[i+1]==&amp;apos;U&amp;apos;&amp;amp;&amp;amp;a[i+2]==&amp;apos;B&amp;apos;)
        {   a[i]=&amp;apos; &amp;apos;;
            a[i+1]=a[i];
            a[i+2]=a[i+1];//用空格替换掉，但就有三个空格了
            delet(a,&amp;apos; &amp;apos;);//删除空格，这时所有字符连在一起
            cout&amp;lt;&amp;lt;&amp;quot; &amp;quot;;//为了在删除点制造一个空格}
        cout&amp;lt;&amp;lt;a[i];}
cout&amp;lt;&amp;lt;a[0];

}
void delet(char a[],char ch)//删除指定字符
{
    int i,j;
    for(i=j=0;a[i]!=&amp;apos;\0&amp;apos;;i++)
    {
        if(a[i]!=ch)
            a[j++]=a[i];
    }
    a[j]=&amp;apos;\0&amp;apos;;    
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;但当为WUBWUBIWUBLOVEWUBYOU会变为  I LOVE YOU；&lt;/p&gt;
&lt;p&gt;I前面会有空格，不符合题意；看来还是失败了TAT;&lt;/p&gt;
&lt;p&gt;查了一个看起来简洁的答案&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
int main()
{
char s[200];
int a, b, i, j, k;
scanf(&amp;quot;%s&amp;quot;, s);
k = strlen(s);
a = 0;
b = 0;
for(i = 0; i &amp;lt; k; i++)
{if(s[i]==&amp;apos;W&amp;apos;&amp;amp;&amp;amp;s[i+1]==&amp;apos;U&amp;apos;&amp;amp;&amp;amp;s[i+2]==&amp;apos;B&amp;apos;)
{if(b != 0&amp;amp;&amp;amp;a!=1)
printf(&amp;quot; &amp;quot;);i = i + 2;a = 1;
}
else
{printf(&amp;quot;%c&amp;quot;,s[i]);b = 1;a = 0;
}
}
printf(&amp;quot;\n&amp;quot;);
return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;资料：&lt;code&gt;#include &amp;lt;string.h&amp;gt;&lt;/code&gt;：C语言里面关于字符数组的函数定义的头文件，常用函数有strlen、strcmp、strcpy等等。&lt;/p&gt;
&lt;p&gt;strlen所作的仅仅是一个计数器的工作，它从内存的某个位置(可以是字符串开头，中间某个位置，甚至是某个不确定的内存区域)开始扫描，直到碰到第一个字符串结束符’\0’为止，然后返回计数器值(长度不包含”\0”)。（主要是这个起作用）&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;下面是道算法题：&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>C语言 学习笔记(1)</title>
    <link href="http://shuang13.coding.me/2015/11/20/C%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0-1/"/>
    <id>http://shuang13.coding.me/2015/11/20/C语言笔记-1/</id>
    <published>2015-11-20T09:26:36.000Z</published>
    <updated>2016-08-09T02:44:32.578Z</updated>
    
    <content type="html">&lt;p&gt;1.scan f的输入格式，空格、TAB和回车符都是无关紧要的，&lt;br&gt;所以按En t er键并不意味着输入的结束。那如何才能告诉程序输入结束了呢？&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;在Windows下，输入完毕后先按Enter键，再按Ctrl＋Z键，最后再按Enter&lt;br&gt;键，即可结束输入。&lt;/p&gt;
&lt;p&gt;2.避免输入数据的时间影响测试结果，可使用一种称为“管道”的小技巧：在Win dows命令行下&lt;br&gt;执行ech o  20| abc，操作系统会自动把20输入，其中abc是程序名。&lt;/p&gt;
&lt;p&gt;3.使用文件最简单的方法是使用输入输出重定向，只需在m ain 函数的入口处加入以下两条&lt;br&gt;语句：&lt;br&gt;freopen(“input.txt”, “r”, stdin);&lt;br&gt;freopen(“output.txt”, “w”, stdout);&lt;br&gt;上述语句将使得scan f从文件in pu t .t x t读入，prin t f写入文件ou t pu t .t x t。事实上，不只是scan f&lt;br&gt;和prin t f，所有读键盘输入、写屏幕输出的函数都将改用文件。&lt;/p&gt;
&lt;p&gt;4.比较大的数组应尽量声明在main函数外，否则程序可能无法运行。&lt;/p&gt;
&lt;p&gt;5.如果要从数组a复制k个元素到数组b，可以这样做：m em cpy （b，a，siz eof（in t）&lt;em&gt;k ）。当然，如果数组a和b&lt;br&gt;都是浮点型的，复制时要写成“m em cpy （b，a，siz eof（dou ble）&lt;/em&gt;k ）”。另外需要注意的是，&lt;br&gt;使用m em cpy 函数要包含头文件st rin g .h 。如果需要把数组a全部复制到数组b中，可以写得简单&lt;br&gt;一些：m em cpy （b，a，siz eof（a））。&lt;/p&gt;
&lt;p&gt;6.“m em set（a，0，siz eof（a））”的作用是把数组a清零，它也在st rin g .h 中定义。&lt;/p&gt;
&lt;p&gt;7.要输出\n用\n；同理其他也可以用\；&lt;/p&gt;
&lt;p&gt;输出%d用%%d;同理。。。&lt;/p&gt;
&lt;p&gt;8.保留小数%5.2f代表共5个长度，小数2两位&lt;/p&gt;
&lt;p&gt;9.逻辑运算符优先级：！最先；&amp;amp;&amp;amp;中；||低；&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;1.scan f的输入格式，空格、TAB和回车符都是无关紧要的，&lt;br&gt;所以按En t er键并不意味着输入的结束。那如何才能告诉程序输入结束了呢？&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>书坊 -《地狱》</title>
    <link href="http://shuang13.coding.me/2015/11/13/%E4%B9%A6%E5%9D%8A-%E5%9C%B0%E7%8B%B1/"/>
    <id>http://shuang13.coding.me/2015/11/13/书坊-地狱/</id>
    <published>2015-11-13T05:02:00.000Z</published>
    <updated>2016-08-09T03:07:02.885Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://img3.doubanio.com/mpic/s27173855.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;作者-美-丹·布朗&quot;&gt;&lt;a href=&quot;#作者-美-丹·布朗&quot; class=&quot;headerlink&quot; title=&quot;作者: (美)丹·布朗&quot;&gt;&lt;/a&gt;作者: (美)丹·布朗&lt;/h3&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;今天终于看完了丹布朗的《地狱》，一如既往的好看，其中精妙的骗局，优美的历史，关于但丁，关于《神曲》，关于人口问题，着实让我深深痴迷。让我对如今人类的人口问题，见识了一种我从没听过的解决方法，&lt;/p&gt;
&lt;p&gt;就是研发出了一种让人不能生育的高传染性的病毒，但不是所有人都不能生育，而是只有三分之一的人会终生不育，并会随着DNA遗传下去，算种隐性遗传。就像黑死病一样，它的爆发促进了文艺复兴，人类一切问题皆可由人口问题而产生。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img3.doubanio.com/mpic/s27173855.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;作者-美-丹·布朗&quot;&gt;&lt;a href=&quot;#作者-美-丹·布朗&quot; class=&quot;headerlink&quot; title=&quot;作者: (美)丹·布朗&quot;&gt;&lt;/a&gt;作者: (美)丹·布朗&lt;/h3&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>讲座 -花千芳</title>
    <link href="http://shuang13.coding.me/2015/10/02/%E8%AE%B2%E5%BA%A7-%E8%8A%B1%E5%8D%83%E8%8A%B3/"/>
    <id>http://shuang13.coding.me/2015/10/02/讲座-花千芳/</id>
    <published>2015-10-02T15:03:53.000Z</published>
    <updated>2016-08-09T03:30:39.482Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;第四十二期文峰青年大讲堂&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;–花千芳：畅游互联网与幸福的中国人!&lt;/p&gt;
&lt;p&gt;时间：9月24日 晚上19:00&lt;/p&gt;
&lt;p&gt;这是上大学听的第一次讲座，听到“花千芳”这个名字，第一反应是“花千骨”，然后就带着好奇去听。感觉收获真的挺大的。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;而且最令我激动的是他是《我们的征途是星辰大海》的作者；与《那些年哪些兔》有密切的关系，虽然一般人不知道这个动漫，可我知道这部动漫给国漫带来了多大的影响。&lt;/p&gt;
&lt;p&gt;花千芳是农民出身，从贫穷的山村，通过互联网，传播正能量，进而实现自身价值获得成功。他的勤奋与坚持令人敬佩，给了我很大的感动。&lt;/p&gt;
&lt;p&gt;花老师还给我们透露，如今有个重大机遇出现在我们面前，习主席提出的互联网+正在改变将来的社会形势，就如当初如马云等人抓住了互联网这机遇，看准了形势，如今获得了巨大成功。而如今中国极具缺乏计算机人才，如何将网络向多元化渗透，就看我们这一代如何去改变了。&lt;/p&gt;
&lt;p&gt;人物资料&lt;/p&gt;
&lt;p&gt;花千芳，辽宁省清原满族自治县人，1978年生，长期活跃在美言、天涯、铁血等著名论坛的草根农民网络作家，拥有大批粉丝。“花千芳”这个笔名，取中华的“华”的谐音，就是希望中华民族大家都好。&lt;/p&gt;
&lt;p&gt;花千芳初中毕业后休学，以养鸡和种玉米等为生，13岁开始写作，2012年因15万字作品《我们的征途是星辰大海》一炮而红。曾任天涯国际观察版主，现为抚顺作家协会会员。&lt;/p&gt;
&lt;p&gt;不过与众多网络作家不同的是，花千芳的写作以传递正能量、弘扬中国梦为主基调，被誉为“中国网络正能量四大写手之一”。[2] &lt;/p&gt;
&lt;p&gt;2014年11月5日，“花千芳工作室”在清原县挂牌成立，县文联为花千芳专门配备了写作间，写作间电脑、办公桌椅等一应俱全。“花千芳工作室”将成为清原县广大业余作者、文学爱好者的培训基地，花千芳将不定期讲课、辅导。[3] &lt;/p&gt;
&lt;p&gt;2014年11月6日，抚顺市作家协会八届四次理事会议表决通过了增补花千芳为抚顺市作家协会八届理事会理事，增选花千芳为抚顺市作家协会副主席。[1] &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://shuang13.coding.me/imgs/20150924_183706.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;第四十二期文峰青年大讲堂&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;–花千芳：畅游互联网与幸福的中国人!&lt;/p&gt;
&lt;p&gt;时间：9月24日 晚上19:00&lt;/p&gt;
&lt;p&gt;这是上大学听的第一次讲座，听到“花千芳”这个名字，第一反应是“花千骨”，然后就带着好奇去听。感觉收获真的挺大的。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
